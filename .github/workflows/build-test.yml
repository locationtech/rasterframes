name: Build and Test

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['master', 'develop', 'release/*']
    tags: [v*]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: s22s/debian-openjdk-conda-gdal:6790f8d

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: coursier/cache-action@v6
      - uses: olafurpg/setup-scala@v13
        with:
          java-version: adopt@1.11

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Conda dependencies
        run: |
          # $CONDA_DIR is an environment variable pointing to the root of the miniconda directory
          $CONDA_DIR/bin/conda install -c conda-forge --yes --file pyrasterframes/src/main/python/requirements-condaforge.txt

      # Do just the compilation stage to minimize sbt memory footprint
      - name: Compile
        run: sbt -v -batch compile test:compile it:compile

      - name: Core tests
        run: sbt -batch core/test

      - name: Datasource tests
        run: sbt -batch datasource/test

      - name: Experimental tests
        run: sbt -batch experimental/test

      - name: Create PyRasterFrames package
        run: sbt -v -batch pyrasterframes/package

      - name: Python tests
        run: sbt -batch pyrasterframes/test

      - name: Collect artifacts
        if: ${{ failure() }}
        run: |
          mkdir -p /tmp/core_dumps
          ls -lh /tmp
          cp core.* *.hs /tmp/core_dumps/ 2> /dev/null || true
          cp ./core/*.log /tmp/core_dumps/ 2> /dev/null || true
          cp -r /tmp/hsperfdata* /tmp/*.hprof /tmp/core_dumps/ 2> /dev/null || true
          cp repo/core/core/* /tmp/core_dumps/ 2> /dev/null || true

      - name: Upload core dumps
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: core-dumps
          path: /tmp/core_dumps
